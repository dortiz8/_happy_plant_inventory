{"ast":null,"code":"var _jsxFileName = \"/Users/dortiz/Desktop/Development/PersonalProjects/VerdeInventorySystem/client/src/components/Plants/PlantCard/EditContent.js\";\nimport React from 'react';\nimport { Card, Typography, CardContent, CardMedia, Box, FormControl, InputLabel, Select, MenuItem, CardActions, Input, Button } from '@mui/material';\nimport typeList from '../../../lists/plantTypeList';\nimport EditIcon from '@mui/icons-material/Edit';\nimport sizes from '../../../constants/sizes';\nimport statuses from '../../../constants/status';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditContent = _ref => {\n  let {\n    plant,\n    plantInfo,\n    formHasAllRequiredFields,\n    inputOfNumberValid,\n    handleSaveEdit,\n    handleEditMode,\n    handleInputChange,\n    handleFileSelection\n  } = _ref;\n  console.log(plant, plantInfo);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"200\",\n          image: `${plant === null || plant === void 0 ? void 0 : plant.selectedFiles[0].base64}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"selectedFiles\",\n          type: \"file\",\n          id: \"file\",\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Box, {\n        children: [!formHasAllRequiredFields && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: \"* All fields and images are required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 47\n        }, this), !inputOfNumberValid && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: \"* Price is not a valid number.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"category\",\n              children: \"type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              label: \"Type\",\n              name: \"type\",\n              id: \"type\",\n              value: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.type,\n              sx: {\n                color: 'black'\n              },\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \" -- \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 29\n              }, this), typeList.map(genus => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: genus,\n                children: genus\n              }, typeList.indexOf(genus), false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 56\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"description\",\n              type: \"text\",\n              id: \"description\",\n              value: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.description,\n              sx: {\n                display: 'block'\n              },\n              placeholder: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.description.toString(),\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"price\",\n            type: \"number\",\n            id: \"price\",\n            value: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.price,\n            sx: {\n              display: 'block'\n            },\n            placeholder: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.price.toString(),\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSaveEdit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"warning\",\n        onClick: handleEditMode,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c = EditContent;\nexport default EditContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditContent\");","map":{"version":3,"sources":["/Users/dortiz/Desktop/Development/PersonalProjects/VerdeInventorySystem/client/src/components/Plants/PlantCard/EditContent.js"],"names":["React","Card","Typography","CardContent","CardMedia","Box","FormControl","InputLabel","Select","MenuItem","CardActions","Input","Button","typeList","EditIcon","sizes","statuses","EditContent","plant","plantInfo","formHasAllRequiredFields","inputOfNumberValid","handleSaveEdit","handleEditMode","handleInputChange","handleFileSelection","console","log","selectedFiles","base64","display","type","color","map","genus","indexOf","description","toString","price"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Typography, CardContent, CardMedia, Box, FormControl, InputLabel, Select, MenuItem, CardActions, Input, Button} from '@mui/material';\nimport typeList from '../../../lists/plantTypeList';\nimport EditIcon from '@mui/icons-material/Edit';\nimport sizes from '../../../constants/sizes';\nimport statuses from '../../../constants/status';\n\nconst EditContent = ({ plant, plantInfo, formHasAllRequiredFields, inputOfNumberValid, handleSaveEdit, handleEditMode, handleInputChange, handleFileSelection}) => {\n    console.log(plant, plantInfo)\n    return (\n        <>\n        <CardContent>\n            <>\n                <CardMedia component=\"img\" height=\"200\" image={`${plant?.selectedFiles[0].base64}`} />\n                \n                <input name=\"selectedFiles\" \n                        type=\"file\" id=\"file\" style={{ display: 'none' }} onChange={handleFileSelection} />\n                <label htmlFor=\"file\">\n                    <Button>\n                        <EditIcon />\n                    </Button>\n                </label>\n            </>\n            <Box>\n                {!formHasAllRequiredFields && <Typography color=\"error\">* All fields and images are required.</Typography>}\n                {!inputOfNumberValid && <Typography color=\"error\">* Price is not a valid number.</Typography>}\n            </Box>\n            <Box>\n                <Box>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"category\">type</InputLabel>\n                        <Select label=\"Type\" name=\"type\" id=\"type\" value={plantInfo?.type} sx={{ color: 'black' }} onChange={handleInputChange}>\n                            <MenuItem value=\"\"> -- </MenuItem>\n                                {typeList.map(genus => <MenuItem key={typeList.indexOf(genus)} value={genus}>{genus}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Box>\n                <Box>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"description\">Description</InputLabel>\n                        <Input name='description' type=\"text\" id=\"description\" value={plantInfo?.description} sx={{ display: 'block' }} placeholder={plantInfo?.description.toString()} onChange={handleInputChange}></Input>\n                    </FormControl>\n                </Box>\n                <FormControl fullWidth>\n                    <InputLabel id=\"price\">Price</InputLabel>\n                    <Input name='price' type=\"number\" id=\"price\" value={plantInfo?.price} sx={{ display: 'block' }} placeholder={plantInfo?.price.toString()} onChange={handleInputChange}></Input>\n                </FormControl>\n            </Box>\n        </CardContent>\n        <CardActions>\n                <Button onClick={handleSaveEdit}>Save</Button>\n                <Button color=\"warning\" onClick={handleEditMode}>Cancel</Button>\n        </CardActions>\n        </>\n    )\n}\n\nexport default EditContent;"]},"metadata":{},"sourceType":"module"}