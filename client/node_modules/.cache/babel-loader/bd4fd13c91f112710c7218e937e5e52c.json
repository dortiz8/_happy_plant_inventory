{"ast":null,"code":"var _jsxFileName = \"/Users/dortiz/Desktop/Development/PersonalProjects/VerdeInventorySystem/client/src/components/Plants/PlantCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom'; // Redux store functions\n\nimport { fetchOnePlant } from '../../store/plants'; // Meterial UI Section\n\nimport { FormControl, Button, Typography, Card, CardMedia, CardContent, CardActions, Box, Input, InputLabel, MenuItem, Select } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft'; // Other Imports \n\nimport plantCategories from '../../lists/plantCategories';\nimport sizes from '../../constants/sizes';\nimport statuses from '../../constants/status';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlantCard = () => {\n  _s();\n\n  var _plant, _plant2, _plant3, _plant4, _plant5, _plant6, _plant7, _plant8, _plant9, _plant10, _plant11, _plant12, _plant13, _plant14, _plant15, _plant16;\n\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    dispatch(fetchOnePlant(id));\n  }, [id]);\n  const [plantInfo, setPlantInfo] = useState({\n    name: (_plant = plant) === null || _plant === void 0 ? void 0 : _plant.name,\n    category: (_plant2 = plant) === null || _plant2 === void 0 ? void 0 : _plant2.category,\n    quantity: (_plant3 = plant) === null || _plant3 === void 0 ? void 0 : _plant3.quantity,\n    size: (_plant4 = plant) === null || _plant4 === void 0 ? void 0 : _plant4.size,\n    status: (_plant5 = plant) === null || _plant5 === void 0 ? void 0 : _plant5.status,\n    description: (_plant6 = plant) === null || _plant6 === void 0 ? void 0 : _plant6.description,\n    price: (_plant7 = plant) === null || _plant7 === void 0 ? void 0 : _plant7.price,\n    selectedFiles: (_plant8 = plant) === null || _plant8 === void 0 ? void 0 : _plant8.selectedFiles\n  });\n  const [editMode, setEditMode] = useState(false);\n  const dispatch = useDispatch();\n  console.log(plant);\n\n  function handleInputChange(event) {\n    let newObj = {};\n\n    if (!isNaN(parseInt(event.target.value))) {\n      newObj[event.target.name] = parseInt(event.target.value);\n    } else {\n      newObj[event.target.name] = event.target.value;\n    }\n\n    setPlantInfo({ ...plantInfo,\n      ...newObj\n    });\n  }\n\n  function handleEditMode() {\n    setEditMode(!editMode);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      margin: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      height: \"200\",\n      image: `${(_plant9 = plant) === null || _plant9 === void 0 ? void 0 : _plant9.selectedFiles[0].base64}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"name\",\n            type: \"text\",\n            id: \"name\",\n            value: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.name,\n            sx: {\n              display: 'block'\n            },\n            placeholder: `Name: ${(_plant10 = plant) === null || _plant10 === void 0 ? void 0 : _plant10.name}`,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"category\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              label: \"Category\",\n              name: \"category\",\n              id: \"category\",\n              value: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.category,\n              sx: {\n                color: 'black'\n              },\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \" -- \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this), plantCategories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: category,\n                children: category\n              }, plantCategories.indexOf(category), false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 74\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"size\",\n              children: \"Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              label: \"Size\",\n              name: \"size\",\n              id: \"size\",\n              value: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.size,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \" -- \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 41\n              }, this), sizes.map(size => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.size,\n                children: size\n              }, sizes.indexOf(size), false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 60\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"status\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              label: \"status\",\n              name: \"status\",\n              id: \"status\",\n              value: plantInfo.status,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \" -- \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this), statuses.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.status,\n                children: status\n              }, statuses.indexOf(status), false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 65\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"price\",\n            type: \"number\",\n            id: \"price\",\n            value: plantInfo.price,\n            sx: {\n              display: 'block'\n            },\n            placeholder: `Price: $${(_plant11 = plant) === null || _plant11 === void 0 ? void 0 : _plant11.price}`,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: (_plant12 = plant) === null || _plant12 === void 0 ? void 0 : _plant12.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Category: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }, this), (_plant13 = plant) === null || _plant13 === void 0 ? void 0 : _plant13.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Size: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 37\n        }, this), (_plant14 = plant) === null || _plant14 === void 0 ? void 0 : _plant14.size]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Status: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 37\n        }, this), (_plant15 = plant) === null || _plant15 === void 0 ? void 0 : _plant15.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Price: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 37\n        }, this), \"$\", (_plant16 = plant) === null || _plant16 === void 0 ? void 0 : _plant16.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: editMode ? /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditMode,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"warning\",\n          onClick: handleEditMode,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/plants\",\n          replace: true,\n          children: /*#__PURE__*/_jsxDEV(ArrowLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditMode,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"warning\",\n          children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PlantCard, \"grp1zTqmyFLm4D+2L2GcZjWN1cY=\", false, function () {\n  return [useParams, useDispatch];\n});\n\n_c = PlantCard;\nexport default PlantCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlantCard\");","map":{"version":3,"sources":["/Users/dortiz/Desktop/Development/PersonalProjects/VerdeInventorySystem/client/src/components/Plants/PlantCard.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Link","useParams","fetchOnePlant","FormControl","Button","Typography","Card","CardMedia","CardContent","CardActions","Box","Input","InputLabel","MenuItem","Select","EditIcon","DeleteForeverIcon","ArrowLeftIcon","plantCategories","sizes","statuses","PlantCard","id","dispatch","plantInfo","setPlantInfo","name","plant","category","quantity","size","status","description","price","selectedFiles","editMode","setEditMode","console","log","handleInputChange","event","newObj","isNaN","parseInt","target","value","handleEditMode","margin","base64","display","color","map","indexOf"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n// Redux store functions\nimport { fetchOnePlant } from '../../store/plants';\n// Meterial UI Section\nimport {FormControl, Button, Typography, Card, CardMedia, CardContent, CardActions, Box, Input, InputLabel, MenuItem, Select} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\n// Other Imports \nimport plantCategories from '../../lists/plantCategories';\nimport sizes from '../../constants/sizes';\nimport statuses from '../../constants/status'; \nconst PlantCard = () => { \n    const { id } = useParams();\n    useEffect(() => {\n        dispatch(fetchOnePlant(id))\n\n    }, [id])\n   \n   ;\n    const [plantInfo, setPlantInfo] = useState({ name: plant?.name, category: plant?.category, quantity: plant?.quantity, size: plant?.size, status: plant?.status, description: plant?.description, price: plant?.price, selectedFiles: plant?.selectedFiles }); \n    const [editMode, setEditMode] = useState(false); \n    const dispatch = useDispatch(); \n    console.log(plant)\n    \n\n    function handleInputChange(event){\n        let newObj = {};\n        if (!isNaN(parseInt(event.target.value))) {\n            newObj[event.target.name] = parseInt(event.target.value);\n        } else {\n            newObj[event.target.name] = event.target.value;\n        }\n        setPlantInfo({\n            ...plantInfo,\n            ...newObj\n        })\n    }\n    function handleEditMode(){\n        setEditMode(!editMode)\n    }\n    return (\n\n            <Card sx={{margin: \"10px\"}}>          \n                <CardMedia component=\"img\" height=\"200\"  image={`${plant?.selectedFiles[0].base64}`} />\n                    { editMode ? (\n                        <CardContent>\n                            <Box>\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"name\">Name</InputLabel> \n                                    <Input name='name' type=\"text\" id=\"name\" value={plantInfo?.name} sx={{ display: 'block' }} placeholder={`Name: ${plant?.name}`} onChange={handleInputChange}></Input>\n                                </FormControl> \n                            <Box>\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"category\">Category</InputLabel>\n                                    <Select label=\"Category\" name=\"category\" id=\"category\" value={plantInfo?.category} sx={{ color: 'black' }}  onChange={handleInputChange}>\n                                        <MenuItem value=\"\"> -- </MenuItem>\n                                        {plantCategories.map(category => <MenuItem key={plantCategories.indexOf(category)} value={category}>{category}</MenuItem>)}\n                                    </Select>\n                                </FormControl>\n                            </Box>\n                            <Box>\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"size\">Size</InputLabel>\n                                    <Select label=\"Size\" name=\"size\" id=\"size\" value={plantInfo?.size} onChange={handleInputChange}>\n                                        <MenuItem value=\"\"> -- </MenuItem>\n                                        {sizes.map(size => <MenuItem key={sizes.indexOf(size)} value={plantInfo?.size}>{size}</MenuItem>)}\n                                    </Select>\n                                </FormControl>\n                            </Box>\n                            <Box>\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"status\">Status</InputLabel>\n                                    <Select label=\"status\" name=\"status\" id=\"status\" value={plantInfo.status} onChange={handleInputChange}>\n                                        <MenuItem value=\"\"> -- </MenuItem>\n                                        {statuses.map(status => <MenuItem key={statuses.indexOf(status)} value={plantInfo?.status}>{status}</MenuItem>)}\n                                    </Select>\n                                </FormControl>\n                            </Box>\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"price\">Price</InputLabel>\n                                    <Input name='price' type=\"number\" id=\"price\" value={plantInfo.price} sx={{ display: 'block' }} placeholder={`Price: $${plant?.price}`} onChange={handleInputChange}></Input>\n                                </FormControl>                           \n                            </Box>\n                        </CardContent>\n                    ) : (\n                    <CardContent>\n                        <Typography variant='h4'>{plant?.name}</Typography>\n                        <Typography><b>Category: </b>{plant?.category}</Typography>\n                        <Typography><b>Size: </b>{plant?.size}</Typography>\n                        <Typography><b>Status: </b>{plant?.status}</Typography>\n                        <Typography><b>Price: </b>${plant?.price}</Typography>\n                    </CardContent>\n                    )}               \n                <CardActions>\n                    { editMode ? (\n                        <Box>\n                            <Button onClick={handleEditMode}>Save</Button>\n                            <Button color=\"warning\" onClick={handleEditMode}>Cancel</Button>\n                        </Box>                       \n                    ) : (\n                        <Box>\n                            <Link to=\"/plants\" replace><ArrowLeftIcon /></Link>\n                            <Button onClick={handleEditMode}>\n                                <EditIcon />\n                            </Button>\n                            <Button color=\"warning\"><DeleteForeverIcon /></Button>\n                        </Box>                     \n                    )}  \n                </CardActions> \n            </Card>\n        \n      \n    )\n}\n\nexport default PlantCard;"]},"metadata":{},"sourceType":"module"}