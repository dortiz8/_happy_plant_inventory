{"ast":null,"code":"var _jsxFileName = \"/Users/dortiz/Desktop/Development/PersonalProjects/VerdeInventorySystem/client/src/components/Plants/PlantCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom'; // Redux store functions\n\nimport { fetchOnePlant } from '../../store/plants'; // Meterial UI Section\n\nimport { FormControl, Button, Typography, Card, CardMedia, CardContent, CardActions, Box, Input, InputLabel, MenuItem, Select } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft'; // Other Imports \n\nimport plantCategories from '../../lists/plantCategories';\nimport sizes from '../../constants/sizes';\nimport statuses from '../../constants/status';\nimport FormConfirmDelete from './FormConfirmDelete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlantCard = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const plant = useSelector(state => state.plants.plant.data);\n  const [plantInfo, setPlantInfo] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const [formConfirmDeleteVisible, setFormConfirmDeleteVisible] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchOnePlant(id));\n  }, [id]);\n  useEffect(() => {\n    setPlantInfo(plant);\n  }, [plant]);\n\n  function handleInputChange(event) {\n    let newObj = {};\n\n    if (!isNaN(parseInt(event.target.value))) {\n      newObj[event.target.name] = parseInt(event.target.value);\n    } else {\n      newObj[event.target.name] = event.target.value;\n    }\n\n    setPlantInfo({ ...plantInfo,\n      ...newObj\n    });\n  }\n\n  function handleEditMode() {\n    setEditMode(!editMode);\n  }\n\n  function handleDeleteItem() {}\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [formConfirmDeleteVisible && /*#__PURE__*/_jsxDEV(FormConfirmDelete, {\n      handleDeleteItem: handleDeleteItem,\n      setFormConfirmDeleteVisible: setFormConfirmDeleteVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        margin: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"200\",\n        image: `${plant === null || plant === void 0 ? void 0 : plant.selectedFiles[0].base64}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"name\",\n              type: \"text\",\n              id: \"name\",\n              value: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.name,\n              sx: {\n                display: 'block'\n              },\n              placeholder: `Name: ${plant === null || plant === void 0 ? void 0 : plant.name}`,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"category\",\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                label: \"Category\",\n                name: \"category\",\n                id: \"category\",\n                value: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.category,\n                sx: {\n                  color: 'black'\n                },\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \" -- \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 45\n                }, this), plantCategories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: category,\n                  children: category\n                }, plantCategories.indexOf(category), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 78\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"size\",\n                children: \"Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                label: \"Size\",\n                name: \"size\",\n                id: \"size\",\n                value: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.size,\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \" -- \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 45\n                }, this), sizes.map(size => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: size,\n                  children: size\n                }, sizes.indexOf(size), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 64\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"status\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                label: \"status\",\n                name: \"status\",\n                id: \"status\",\n                value: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.status,\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \" -- \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 45\n                }, this), statuses.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: status,\n                  children: status\n                }, statuses.indexOf(status), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 69\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"price\",\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"price\",\n              type: \"number\",\n              id: \"price\",\n              value: plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.price,\n              sx: {\n                display: 'block'\n              },\n              placeholder: `Price: $${plantInfo === null || plantInfo === void 0 ? void 0 : plantInfo.price}`,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: plant === null || plant === void 0 ? void 0 : plant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Category: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 41\n          }, this), plant === null || plant === void 0 ? void 0 : plant.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Size: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }, this), plant === null || plant === void 0 ? void 0 : plant.size]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Status: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 41\n          }, this), plant === null || plant === void 0 ? void 0 : plant.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Price: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 41\n          }, this), \"$\", plant === null || plant === void 0 ? void 0 : plant.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: editMode ? /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleEditMode,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"warning\",\n            onClick: handleEditMode,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/plants\",\n            replace: true,\n            children: /*#__PURE__*/_jsxDEV(ArrowLeftIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleEditMode,\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"warning\",\n            onClick: () => setFormConfirmDeleteVisible(true),\n            children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 109\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), \"}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PlantCard, \"aIapfoh65m9fSK4fNBtejmNxxCo=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = PlantCard;\nexport default PlantCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlantCard\");","map":{"version":3,"sources":["/Users/dortiz/Desktop/Development/PersonalProjects/VerdeInventorySystem/client/src/components/Plants/PlantCard.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Link","useParams","fetchOnePlant","FormControl","Button","Typography","Card","CardMedia","CardContent","CardActions","Box","Input","InputLabel","MenuItem","Select","EditIcon","DeleteForeverIcon","ArrowLeftIcon","plantCategories","sizes","statuses","FormConfirmDelete","PlantCard","id","plant","state","plants","data","plantInfo","setPlantInfo","editMode","setEditMode","formConfirmDeleteVisible","setFormConfirmDeleteVisible","dispatch","handleInputChange","event","newObj","isNaN","parseInt","target","value","name","handleEditMode","handleDeleteItem","margin","selectedFiles","base64","display","category","color","map","indexOf","size","status","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;AACA,SAASC,aAAT,QAA8B,oBAA9B,C,CACA;;AACA,SAAQC,WAAR,EAAqBC,MAArB,EAA6BC,UAA7B,EAAyCC,IAAzC,EAA+CC,SAA/C,EAA0DC,WAA1D,EAAuEC,WAAvE,EAAoFC,GAApF,EAAyFC,KAAzF,EAAgGC,UAAhG,EAA4GC,QAA5G,EAAsHC,MAAtH,QAAmI,eAAnI;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,aAAP,MAA0B,+BAA1B,C,CACA;;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAStB,SAAS,EAAxB;AACA,QAAMuB,KAAK,GAAG1B,WAAW,CAAE2B,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,KAAb,CAAmBG,IAA/B,CAAzB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiC,QAAD,EAAWC,WAAX,IAA0BlC,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACmC,wBAAD,EAA2BC,2BAA3B,IAA0DpC,QAAQ,CAAC,KAAD,CAAxE;AAEA,QAAMqC,QAAQ,GAAGnC,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZsC,IAAAA,QAAQ,CAAChC,aAAa,CAACqB,EAAD,CAAd,CAAR;AAEH,GAHQ,EAGN,CAACA,EAAD,CAHM,CAAT;AAIA3B,EAAAA,SAAS,CAAC,MAAI;AACViC,IAAAA,YAAY,CAACL,KAAD,CAAZ;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASW,iBAAT,CAA2BC,KAA3B,EAAiC;AAC7B,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAI,CAACC,KAAK,CAACC,QAAQ,CAACH,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAT,CAAV,EAA0C;AACtCJ,MAAAA,MAAM,CAACD,KAAK,CAACI,MAAN,CAAaE,IAAd,CAAN,GAA4BH,QAAQ,CAACH,KAAK,CAACI,MAAN,CAAaC,KAAd,CAApC;AACH,KAFD,MAEO;AACHJ,MAAAA,MAAM,CAACD,KAAK,CAACI,MAAN,CAAaE,IAAd,CAAN,GAA4BN,KAAK,CAACI,MAAN,CAAaC,KAAzC;AACH;;AACDZ,IAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAET,SAAGS;AAFM,KAAD,CAAZ;AAIH;;AACD,WAASM,cAAT,GAAyB;AACrBZ,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AACD,WAASc,gBAAT,GAA2B,CAE1B;;AAAA;AAED,sBACQ,QAAC,GAAD;AAAA,eACCZ,wBAAwB,iBAAI,QAAC,iBAAD;AAAmB,MAAA,gBAAgB,EAAEY,gBAArC;AAAuD,MAAA,2BAA2B,EAAEX;AAApF;AAAA;AAAA;AAAA;AAAA,YAD7B,eAEI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEY,QAAAA,MAAM,EAAE;AAAV,OAAV;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,KAArB;AAA2B,QAAA,MAAM,EAAC,KAAlC;AAAwC,QAAA,KAAK,EAAG,GAAErB,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEsB,aAAP,CAAqB,CAArB,EAAwBC,MAAO;AAAjF;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKjB,QAAQ,gBACL,QAAC,WAAD;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI,QAAC,WAAD;AAAa,YAAA,SAAS,MAAtB;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,EAAE,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,MAAxB;AAA+B,cAAA,EAAE,EAAC,MAAlC;AAAyC,cAAA,KAAK,EAAEF,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEc,IAA3D;AAAiE,cAAA,EAAE,EAAE;AAAEM,gBAAAA,OAAO,EAAE;AAAX,eAArE;AAA2F,cAAA,WAAW,EAAG,SAAQxB,KAAT,aAASA,KAAT,uBAASA,KAAK,CAAEkB,IAAK,EAA7H;AAAgI,cAAA,QAAQ,EAAEP;AAA1I;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,GAAD;AAAA,mCACI,QAAC,WAAD;AAAa,cAAA,SAAS,MAAtB;AAAA,sCACI,QAAC,UAAD;AAAY,gBAAA,EAAE,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,UAAd;AAAyB,gBAAA,IAAI,EAAC,UAA9B;AAAyC,gBAAA,EAAE,EAAC,UAA5C;AAAuD,gBAAA,KAAK,EAAEP,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEqB,QAAzE;AAAmF,gBAAA,EAAE,EAAE;AAAEC,kBAAAA,KAAK,EAAE;AAAT,iBAAvF;AAA2G,gBAAA,QAAQ,EAAEf,iBAArH;AAAA,wCACI,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEKjB,eAAe,CAACiC,GAAhB,CAAoBF,QAAQ,iBAAI,QAAC,QAAD;AAAkD,kBAAA,KAAK,EAAEA,QAAzD;AAAA,4BAAoEA;AAApE,mBAAe/B,eAAe,CAACkC,OAAhB,CAAwBH,QAAxB,CAAf;AAAA;AAAA;AAAA;AAAA,wBAAhC,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ,eAcI,QAAC,GAAD;AAAA,mCACI,QAAC,WAAD;AAAa,cAAA,SAAS,MAAtB;AAAA,sCACI,QAAC,UAAD;AAAY,gBAAA,EAAE,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,MAAd;AAAqB,gBAAA,IAAI,EAAC,MAA1B;AAAiC,gBAAA,EAAE,EAAC,MAApC;AAA2C,gBAAA,KAAK,EAAErB,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEyB,IAA7D;AAAmE,gBAAA,QAAQ,EAAElB,iBAA7E;AAAA,wCACI,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEKhB,KAAK,CAACgC,GAAN,CAAUE,IAAI,iBAAI,QAAC,QAAD;AAAoC,kBAAA,KAAK,EAAEA,IAA3C;AAAA,4BAAkDA;AAAlD,mBAAelC,KAAK,CAACiC,OAAN,CAAcC,IAAd,CAAf;AAAA;AAAA;AAAA;AAAA,wBAAlB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAdJ,eAuBI,QAAC,GAAD;AAAA,mCACI,QAAC,WAAD;AAAa,cAAA,SAAS,MAAtB;AAAA,sCACI,QAAC,UAAD;AAAY,gBAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,QAAd;AAAuB,gBAAA,IAAI,EAAC,QAA5B;AAAqC,gBAAA,EAAE,EAAC,QAAxC;AAAiD,gBAAA,KAAK,EAAEzB,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAE0B,MAAnE;AAA2E,gBAAA,QAAQ,EAAEnB,iBAArF;AAAA,wCACI,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEKf,QAAQ,CAAC+B,GAAT,CAAaG,MAAM,iBAAI,QAAC,QAAD;AAAyC,kBAAA,KAAK,EAAEA,MAAhD;AAAA,4BAAyDA;AAAzD,mBAAelC,QAAQ,CAACgC,OAAT,CAAiBE,MAAjB,CAAf;AAAA;AAAA;AAAA;AAAA,wBAAvB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAvBJ,eAgCI,QAAC,WAAD;AAAa,YAAA,SAAS,MAAtB;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,IAAI,EAAC,QAAzB;AAAkC,cAAA,EAAE,EAAC,OAArC;AAA6C,cAAA,KAAK,EAAE1B,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAE2B,KAA/D;AAAsE,cAAA,EAAE,EAAE;AAAEP,gBAAAA,OAAO,EAAE;AAAX,eAA1E;AAAgG,cAAA,WAAW,EAAG,WAAUpB,SAAX,aAAWA,SAAX,uBAAWA,SAAS,CAAE2B,KAAM,EAAzI;AAA4I,cAAA,QAAQ,EAAEpB;AAAtJ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADK,gBAyCL,QAAC,WAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA,oBAA0BX,KAA1B,aAA0BA,KAA1B,uBAA0BA,KAAK,CAAEkB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAA,kCAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ,EAA8BlB,KAA9B,aAA8BA,KAA9B,uBAA8BA,KAAK,CAAEyB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,UAAD;AAAA,kCAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ,EAA0BzB,KAA1B,aAA0BA,KAA1B,uBAA0BA,KAAK,CAAE6B,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,UAAD;AAAA,kCAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ,EAA4B7B,KAA5B,aAA4BA,KAA5B,uBAA4BA,KAAK,CAAE8B,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,UAAD;AAAA,kCAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ,OAA4B9B,KAA5B,aAA4BA,KAA5B,uBAA4BA,KAAK,CAAE+B,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CR,eAmDI,QAAC,WAAD;AAAA,kBACKzB,QAAQ,gBACL,QAAC,GAAD;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEa,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,OAAO,EAAEA,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADK,gBAML,QAAC,GAAD;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,SAAT;AAAmB,YAAA,OAAO,MAA1B;AAAA,mCAA2B,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEA,cAAjB;AAAA,mCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKQ,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,OAAO,EAAE,MAAIV,2BAA2B,CAAC,IAAD,CAAhE;AAAA,mCAAwE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAxE;AAAA;AAAA;AAAA;AAAA,kBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,cAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AA6EH,CAjHD;;GAAMX,S;UACarB,S,EACDH,W,EAKGC,W;;;KAPfuB,S;AAmHN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n// Redux store functions\nimport { fetchOnePlant } from '../../store/plants';\n// Meterial UI Section\nimport {FormControl, Button, Typography, Card, CardMedia, CardContent, CardActions, Box, Input, InputLabel, MenuItem, Select} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\n// Other Imports \nimport plantCategories from '../../lists/plantCategories';\nimport sizes from '../../constants/sizes';\nimport statuses from '../../constants/status'; \nimport FormConfirmDelete from './FormConfirmDelete';\nconst PlantCard = () => { \n    const { id } = useParams();\n    const plant = useSelector((state) => state.plants.plant.data)\n    const [plantInfo, setPlantInfo] = useState({});\n    const [editMode, setEditMode] = useState(false); \n    const [formConfirmDeleteVisible, setFormConfirmDeleteVisible] = useState(false); \n\n    const dispatch = useDispatch(); \n\n    useEffect(() => {\n        dispatch(fetchOnePlant(id))\n        \n    }, [id]); \n    useEffect(()=>{\n        setPlantInfo(plant)\n    }, [plant]); \n\n    function handleInputChange(event){\n        let newObj = {};\n        if (!isNaN(parseInt(event.target.value))) {\n            newObj[event.target.name] = parseInt(event.target.value);\n        } else {\n            newObj[event.target.name] = event.target.value;\n        }\n        setPlantInfo({\n            ...plantInfo,\n            ...newObj\n        })\n    }\n    function handleEditMode(){\n        setEditMode(!editMode)\n    }\n    function handleDeleteItem(){\n\n    }; \n    \n    return (\n            <Box>\n            {formConfirmDeleteVisible && <FormConfirmDelete handleDeleteItem={handleDeleteItem} setFormConfirmDeleteVisible={setFormConfirmDeleteVisible} /> }\n                <Card sx={{ margin: \"10px\" }}>\n                    <CardMedia component=\"img\" height=\"200\" image={`${plant?.selectedFiles[0].base64}`} />\n                    {editMode ? (\n                        <CardContent>\n                            <Box>\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"name\">Name</InputLabel>\n                                    <Input name='name' type=\"text\" id=\"name\" value={plantInfo?.name} sx={{ display: 'block' }} placeholder={`Name: ${plant?.name}`} onChange={handleInputChange}></Input>\n                                </FormControl>\n                                <Box>\n                                    <FormControl fullWidth>\n                                        <InputLabel id=\"category\">Category</InputLabel>\n                                        <Select label=\"Category\" name=\"category\" id=\"category\" value={plantInfo?.category} sx={{ color: 'black' }} onChange={handleInputChange}>\n                                            <MenuItem value=\"\"> -- </MenuItem>\n                                            {plantCategories.map(category => <MenuItem key={plantCategories.indexOf(category)} value={category}>{category}</MenuItem>)}\n                                        </Select>\n                                    </FormControl>\n                                </Box>\n                                <Box>\n                                    <FormControl fullWidth>\n                                        <InputLabel id=\"size\">Size</InputLabel>\n                                        <Select label=\"Size\" name=\"size\" id=\"size\" value={plantInfo?.size} onChange={handleInputChange}>\n                                            <MenuItem value=\"\"> -- </MenuItem>\n                                            {sizes.map(size => <MenuItem key={sizes.indexOf(size)} value={size}>{size}</MenuItem>)}\n                                        </Select>\n                                    </FormControl>\n                                </Box>\n                                <Box>\n                                    <FormControl fullWidth>\n                                        <InputLabel id=\"status\">Status</InputLabel>\n                                        <Select label=\"status\" name=\"status\" id=\"status\" value={plantInfo?.status} onChange={handleInputChange}>\n                                            <MenuItem value=\"\"> -- </MenuItem>\n                                            {statuses.map(status => <MenuItem key={statuses.indexOf(status)} value={status}>{status}</MenuItem>)}\n                                        </Select>\n                                    </FormControl>\n                                </Box>\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"price\">Price</InputLabel>\n                                    <Input name='price' type=\"number\" id=\"price\" value={plantInfo?.price} sx={{ display: 'block' }} placeholder={`Price: $${plantInfo?.price}`} onChange={handleInputChange}></Input>\n                                </FormControl>\n                            </Box>\n                        </CardContent>\n                    ) : (\n                        <CardContent>\n                            <Typography variant='h4'>{plant?.name}</Typography>\n                            <Typography><b>Category: </b>{plant?.category}</Typography>\n                            <Typography><b>Size: </b>{plant?.size}</Typography>\n                            <Typography><b>Status: </b>{plant?.status}</Typography>\n                            <Typography><b>Price: </b>${plant?.price}</Typography>\n                        </CardContent>\n                    )}\n                    <CardActions>\n                        {editMode ? (\n                            <Box>\n                                <Button onClick={handleEditMode}>Save</Button>\n                                <Button color=\"warning\" onClick={handleEditMode}>Cancel</Button>\n                            </Box>\n                        ) : (\n                            <Box>\n                                <Link to=\"/plants\" replace><ArrowLeftIcon /></Link>\n                                <Button onClick={handleEditMode}>\n                                    <EditIcon />\n                                </Button>\n                                    <Button color=\"warning\" onClick={()=>setFormConfirmDeleteVisible(true)}><DeleteForeverIcon /></Button>\n                            </Box>\n                        )}\n                    </CardActions>\n                </Card>\n                } \n            </Box>\n           \n        \n      \n    )\n}\n\nexport default PlantCard;"]},"metadata":{},"sourceType":"module"}