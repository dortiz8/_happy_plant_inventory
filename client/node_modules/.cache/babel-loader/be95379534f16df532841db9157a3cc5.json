{"ast":null,"code":"var _jsxFileName = \"/Users/dortiz/Desktop/Development/PersonalProjects/VerdeInventorySystem/client/src/components/Plants/Plants.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom'; // Import Redux store components\n\nimport { fetchAllPlants, getPlantsError, getPlantsStatus } from '../../store/plantsSlice';\nimport { Button, Box } from '@mui/material';\nimport PlantListItem from './PlantListItem';\nimport { SelectAllPlants } from '../../store/plantsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Plants = () => {\n  _s();\n\n  const [formConfirmDelete, setFormConfirmDelete] = useState(false);\n  const plantList = useSelector(SelectAllPlants);\n  const plantsStatus = useSelector(getPlantsStatus);\n  const plantsError = useSelector(getPlantsError);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (plantsStatus == 'idle') {\n      dispatch(fetchAllPlants());\n    }\n  }, [plantsStatus, dispatch]);\n\n  function OpenFormConfirmDelete(id) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: plantList && plantList.map(plant => /*#__PURE__*/_jsxDEV(PlantListItem, {\n        plant: plant,\n        OpenFormConfirmDelete: OpenFormConfirmDelete\n      }, plant._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 56\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        margin: '1rem 0',\n        backgroundColor: 'whitesmoke'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/add-plant\",\n          replace: true,\n          children: \"Add a Plant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Plants, \"Ec0W82/oVTB0Ojd4bnDk8V7LRP0=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Plants;\nexport default Plants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plants\");","map":{"version":3,"sources":["/Users/dortiz/Desktop/Development/PersonalProjects/VerdeInventorySystem/client/src/components/Plants/Plants.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Link","fetchAllPlants","getPlantsError","getPlantsStatus","Button","Box","PlantListItem","SelectAllPlants","Plants","formConfirmDelete","setFormConfirmDelete","plantList","plantsStatus","plantsError","dispatch","OpenFormConfirmDelete","id","map","plant","_id","margin","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,eAAzC,QAAgE,yBAAhE;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA2B,eAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,eAAR,QAA8B,yBAA9B;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAMe,SAAS,GAAGb,WAAW,CAACS,eAAD,CAA7B;AACA,QAAMK,YAAY,GAAGd,WAAW,CAACK,eAAD,CAAhC;AACA,QAAMU,WAAW,GAAGf,WAAW,CAACI,cAAD,CAA/B;AAEA,QAAMY,QAAQ,GAAGf,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGe,YAAY,IAAI,MAAnB,EAA0B;AACtBE,MAAAA,QAAQ,CAACb,cAAc,EAAf,CAAR;AACH;AAEJ,GALQ,EAKN,CAACW,YAAD,EAAeE,QAAf,CALM,CAAT;;AAOA,WAASC,qBAAT,CAA+BC,EAA/B,EAAkC,CAEjC;;AAED,sBACI;AAAA,4BACI,QAAC,GAAD;AAAA,gBACKL,SAAS,IAAIA,SAAS,CAACM,GAAV,CAAeC,KAAD,iBAAW,QAAC,aAAD;AAA+B,QAAA,KAAK,EAAEA,KAAtC;AAA6C,QAAA,qBAAqB,EAAEH;AAApE,SAAoBG,KAAK,CAACC,GAA1B;AAAA;AAAA;AAAA;AAAA,cAAzB;AADlB;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAACC,QAAAA,MAAM,EAAE,QAAT;AAAmBC,QAAAA,eAAe,EAAE;AAApC,OAAT;AAAA,6BACI,QAAC,MAAD;AAAA,+BAAQ,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,YAAT;AAAsB,UAAA,OAAO,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA7BD;;GAAMb,M;UAEgBV,W,EACGA,W,EACDA,W,EAEHC,W;;;KANfS,M;AA+BN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n// Import Redux store components\nimport { fetchAllPlants, getPlantsError, getPlantsStatus } from '../../store/plantsSlice'; \nimport { Button, Box} from '@mui/material';\nimport PlantListItem from './PlantListItem';\nimport {SelectAllPlants} from '../../store/plantsSlice'; \n\n\nconst Plants = () => {\n    const [formConfirmDelete, setFormConfirmDelete] = useState(false); \n    const plantList = useSelector(SelectAllPlants); \n    const plantsStatus = useSelector(getPlantsStatus); \n    const plantsError = useSelector(getPlantsError); \n    \n    const dispatch = useDispatch(); \n    useEffect(() => {\n        if(plantsStatus == 'idle'){\n            dispatch(fetchAllPlants())\n        }\n        \n    }, [plantsStatus, dispatch]); \n\n    function OpenFormConfirmDelete(id){\n\n    }\n    \n    return (\n        <div>\n            <Box> \n                {plantList && plantList.map((plant) => <PlantListItem key={plant._id} plant={plant} OpenFormConfirmDelete={OpenFormConfirmDelete} />)}\n            </Box>\n            <Box sx={{margin: '1rem 0', backgroundColor: 'whitesmoke'}}>\n                <Button><Link to=\"/add-plant\" replace>Add a Plant</Link></Button>\n            </Box>\n           \n        </div>\n    )\n}\n\nexport default Plants;"]},"metadata":{},"sourceType":"module"}