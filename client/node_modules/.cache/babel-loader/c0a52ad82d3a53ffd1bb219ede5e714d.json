{"ast":null,"code":"var _jsxFileName = \"/Users/dortiz/Desktop/Development/PersonalProjects/VerdeInventorySystem/client/src/components/Plants/PlantCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom'; // Redux store functions\n\nimport { fetchOnePlant } from '../../store/plants'; // Meterial UI Section\n\nimport { Button, Typography, Card, CardMedia, CardContent, CardActions, Box, Input, InputLabel } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft'; // Other Imports \n\nimport plantCategories from '../../lists/plantCategories';\nimport sizes from '../../constants/sizes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlantCard = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const plant = useSelector(state => state.plants.plant.data);\n  const [editMode, setEditMode] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchOnePlant(id));\n  }, [id]);\n\n  function handleInputChange() {}\n\n  function handleEditMode() {\n    setEditMode(!editMode);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      margin: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      height: \"200\",\n      image: `${plant === null || plant === void 0 ? void 0 : plant.selectedFiles[0].base64}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"name\",\n          type: \"text\",\n          sx: {\n            display: 'block'\n          },\n          placeholder: `Name: ${plant === null || plant === void 0 ? void 0 : plant.name}`,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            label: \"Category\",\n            name: \"category\",\n            value: plantInfo.category,\n            onChange: handleInputChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \" -- \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 41\n            }, this), plantCategories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: category,\n              children: category\n            }, plantCategories.indexOf(category), false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 66\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"category\",\n          type: \"text\",\n          sx: {\n            display: 'block'\n          },\n          placeholder: `Category: ${plant === null || plant === void 0 ? void 0 : plant.category}`,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"size\",\n          type: \"text\",\n          sx: {\n            display: 'block'\n          },\n          placeholder: `Size: ${plant === null || plant === void 0 ? void 0 : plant.size}`,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"status\",\n          type: \"text\",\n          sx: {\n            display: 'block'\n          },\n          placeholder: `Status: ${plant === null || plant === void 0 ? void 0 : plant.status}`,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"price\",\n          type: \"number\",\n          sx: {\n            display: 'block'\n          },\n          placeholder: `Price: ${plant === null || plant === void 0 ? void 0 : plant.price}`,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: plant === null || plant === void 0 ? void 0 : plant.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Category: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }, this), plant === null || plant === void 0 ? void 0 : plant.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Size: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }, this), plant === null || plant === void 0 ? void 0 : plant.size]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Status: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }, this), plant === null || plant === void 0 ? void 0 : plant.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Price: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 37\n        }, this), \"$\", plant === null || plant === void 0 ? void 0 : plant.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: editMode ? /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditMode,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"warning\",\n          onClick: handleEditMode,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/plants\",\n          replace: true,\n          children: /*#__PURE__*/_jsxDEV(ArrowLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditMode,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"warning\",\n          children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PlantCard, \"5JBKFYLjlBakb8512Ox53tCk14E=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = PlantCard;\nexport default PlantCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlantCard\");","map":{"version":3,"sources":["/Users/dortiz/Desktop/Development/PersonalProjects/VerdeInventorySystem/client/src/components/Plants/PlantCard.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Link","useParams","fetchOnePlant","Button","Typography","Card","CardMedia","CardContent","CardActions","Box","Input","InputLabel","EditIcon","DeleteForeverIcon","ArrowLeftIcon","plantCategories","sizes","PlantCard","id","plant","state","plants","data","editMode","setEditMode","dispatch","handleInputChange","handleEditMode","margin","selectedFiles","base64","display","name","plantInfo","category","map","indexOf","size","status","price"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n// Redux store functions\nimport { fetchOnePlant } from '../../store/plants';\n// Meterial UI Section\nimport { Button, Typography, Card, CardMedia, CardContent, CardActions, Box, Input, InputLabel} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\n// Other Imports \nimport plantCategories from '../../lists/plantCategories';\nimport sizes from '../../constants/sizes';\nconst PlantCard = () => { \n    const { id } = useParams();\n    const plant = useSelector((state) => state.plants.plant.data); \n    const [editMode, setEditMode] = useState(false); \n    const dispatch = useDispatch(); \n    \n    useEffect(()=>{\n        dispatch(fetchOnePlant(id))\n        \n    },[id])\n\n    function handleInputChange(){\n\n    }\n    function handleEditMode(){\n        setEditMode(!editMode)\n    }\n    return (\n\n            <Card sx={{margin: \"10px\"}}>          \n                <CardMedia component=\"img\" height=\"200\"  image={`${plant?.selectedFiles[0].base64}`} />\n                    { editMode ? (\n                        <CardContent>\n                            <Box>\n                                <Input name='name' type=\"text\" sx={{ display: 'block' }} placeholder={`Name: ${plant?.name}`} onChange={handleInputChange}></Input>\n                                <Box>\n                                    <Select label=\"Category\" name=\"category\" value={plantInfo.category} onChange={handleInputChange}>\n                                        <MenuItem value=\"\"> -- </MenuItem>\n                                {plantCategories.map(category => <MenuItem key={plantCategories.indexOf(category)} value={category}>{category}</MenuItem>)\n                                }\n                                    </Select>\n                                </Box>\n                                <Input name='category' type=\"text\"  sx={{ display: 'block' }} placeholder={`Category: ${plant?.category}`} onChange={handleInputChange}></Input>\n                                <Input name='size' type=\"text\"  sx={{ display: 'block' }} placeholder={`Size: ${plant?.size}`} onChange={handleInputChange}></Input>\n                                <Input name='status' type=\"text\"  sx={{ display: 'block' }} placeholder={`Status: ${plant?.status}`} onChange={handleInputChange}></Input>\n                                <Input name='price' type=\"number\"  sx={{ display: 'block' }} placeholder={`Price: ${plant?.price}`} onChange={handleInputChange}></Input>\n                            </Box>\n                        </CardContent>\n                    ) : (\n                    <CardContent>\n                        <Typography variant='h4'>{plant?.name}</Typography>\n                        <Typography><b>Category: </b>{plant?.category}</Typography>\n                        <Typography><b>Size: </b>{plant?.size}</Typography>\n                        <Typography><b>Status: </b>{plant?.status}</Typography>\n                        <Typography><b>Price: </b>${plant?.price}</Typography>\n                    </CardContent>\n                    )}               \n                <CardActions>\n                    { editMode ? (\n                        <Box>\n                            <Button onClick={handleEditMode}>Save</Button>\n                            <Button color=\"warning\" onClick={handleEditMode}>Cancel</Button>\n                        </Box>                       \n                    ) : (\n                        <Box>\n                            <Link to=\"/plants\" replace><ArrowLeftIcon /></Link>\n                            <Button onClick={handleEditMode}>\n                                <EditIcon />\n                            </Button>\n                            <Button color=\"warning\"><DeleteForeverIcon /></Button>\n                        </Box>                     \n                    )}  \n                </CardActions> \n            </Card>\n        \n      \n    )\n}\n\nexport default PlantCard;"]},"metadata":{},"sourceType":"module"}