{"ast":null,"code":"var _jsxFileName = \"/Users/dortiz/Desktop/Development/PersonalProjects/VerdeInventorySystem/client/src/components/Plants/FormConfirmAddPlant.js\";\nimport React from 'react';\nimport { Button, Typography, Box, List, ListItem } from '@mui/material';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormConfirmAddPlant = _ref => {\n  let {\n    plantInfo,\n    quantityArray,\n    setFormConfirmVisible,\n    handleSubmit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: '#DFF0DA'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        textAlign: \"center\",\n        children: \"Please confirm to add your new plant.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'whitesmoke'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        margin: \"20px 10px\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 33\n          }, this), plantInfo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Genus: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 33\n          }, this), plantInfo.genus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          margin: '0 10px'\n        },\n        children: quantityArray.map(details => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            margin: '0 10px',\n            padding: '5px',\n            border: '1px solid black',\n            height: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 45\n            }, this), \" \", details.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 45\n            }, this), \"Price: $\", parseFloat(details.price).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Cut: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 45\n            }, this), details.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: details.selectedFiles.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: `${file.name.slice(0, 10)}...${file.name.slice(file.name.length - 4, file.name.length)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 45\n                }, this)\n              }, nanoid(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 76\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }, this)]\n        }, nanoid(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          onClick: handleSubmit,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          size: \"small\",\n          onClick: () => setFormConfirmVisible(false),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = FormConfirmAddPlant;\nexport default FormConfirmAddPlant;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormConfirmAddPlant\");","map":{"version":3,"sources":["/Users/dortiz/Desktop/Development/PersonalProjects/VerdeInventorySystem/client/src/components/Plants/FormConfirmAddPlant.js"],"names":["React","Button","Typography","Box","List","ListItem","nanoid","FormConfirmAddPlant","plantInfo","quantityArray","setFormConfirmVisible","handleSubmit","backgroundColor","name","genus","margin","map","details","padding","border","height","description","parseFloat","price","toFixed","type","selectedFiles","file","slice","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Typography, Box, List, ListItem } from '@mui/material';\nimport { nanoid } from 'nanoid';\n\nconst FormConfirmAddPlant = ({ plantInfo, quantityArray, setFormConfirmVisible, handleSubmit}) => {\n    \n    return (\n        <Box sx={{ backgroundColor: '#DFF0DA'}}>\n            <Box>\n                <Typography variant='h6' textAlign='center'>Please confirm to add your new plant.</Typography>\n            </Box>\n            <Box sx={{ backgroundColor: 'whitesmoke'}}>\n                <Box margin='20px 10px'>\n                    <Typography><b>Name: </b>{plantInfo.name}</Typography>\n                    <Typography><b>Genus: </b>{plantInfo.genus}</Typography>\n                </Box>\n                <Box sx={{margin: '0 10px'}}>\n                    {quantityArray.map((details) =>(\n                        \n                            <Box sx={{ margin: '0 10px', padding: '5px', border: '1px solid black', height: '200px' }} key={nanoid()}>\n                                <Typography><b>Description:</b> {details.description}</Typography>\n                                <Typography><b>Price:</b>Price: ${parseFloat(details.price).toFixed(2)}</Typography>\n                                <Typography><b>Cut: </b>{details.type}</Typography>\n                                <Box>\n                                    <Typography><b>Images</b></Typography>\n                                    <List>\n                                        {details.selectedFiles.map(file => <ListItem key={nanoid()}>\n                                            <Typography variant=\"subtitle2\">{`${file.name.slice(0, 10)}...${file.name.slice(file.name.length - 4, file.name.length)}`}</Typography>\n                                        </ListItem>)}\n                                    </List>\n                                </Box>\n                            </Box>\n                        \n                    ))}\n                </Box>\n                <Box textAlign='center'>\n                    <Button variant=\"contained\" size=\"small\"  onClick={handleSubmit}>Confirm</Button>\n                    <Button variant=\"contained\" color=\"error\" size=\"small\" onClick={() => setFormConfirmVisible(false)}>Edit</Button>\n                </Box>\n            </Box>\n        </Box>\n    )\n}\n\nexport default FormConfirmAddPlant;"]},"metadata":{},"sourceType":"module"}